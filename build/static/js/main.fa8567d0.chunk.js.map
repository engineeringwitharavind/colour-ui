{"version":3,"sources":["constants/index.js","components/App/GlobalStyles.js","components/Card/Card.js","components/ColorGrid/ColorGrid.js","components/TextInput/TextInput.js","components/App/App.js","index.js"],"names":["COLORS","GlobalStyles","createGlobalStyle","_templateObject","_taggedTemplateLiteral","Wrapper","styled","div","HexValue","span","_templateObject2","ColorCard","_ref","color","_jsx","style","backgroundColor","children","Grid","NoDataMessage","ColorGrid","colors","length","map","index","Card","Form","form","Input","input","_templateObject3","TextInput","text","setText","React","useState","setColors","_jsxs","onSubmit","async","event","preventDefault","inputWord","toLowerCase","data","console","error","htmlFor","required","id","type","value","onChange","target","App","rootElement","document","getElementById","createRoot","render","StrictMode","StyleSheetManager","disableVendorPrefixes","Fragment"],"mappings":"4JAAO,MAAMA,EAGC,wBAHDA,EAIL,sBAJKA,EAKJ,oB,MCqGMC,I,IAAAA,EAvGMC,YAAiBC,MAAAC,YAAA,q5CAazBJ,EACKA,G,OCLlB,MAAMK,EAAUC,IAAOC,IAAGJ,MAAAC,YAAA,6KAOfJ,GAILQ,EAAWF,IAAOG,KAAIC,MAAAN,YAAA,qHAObO,I,IAAAA,EA1Bf,SAAkBC,GAAa,IAAZ,MAAEC,GAAOD,EAC1B,OACEE,cAACT,EAAO,CAACU,MAAO,CAAEC,gBAAiBH,GAAQI,SACzCH,cAACN,EAAQ,CAAAS,SAAEJ,KAGjB,ECMA,MAAMK,EAAOZ,IAAOC,IAAGJ,MAAAC,YAAA,gHAMjBe,EAAgBb,IAAOC,IAAGG,MAAAN,YAAA,uEAMjBgB,I,MAAAA,EAxBf,SAAkBR,GAAc,IAAb,OAAES,GAAQT,EAC3B,OACEE,cAACI,EAAI,CAAAD,SACFI,EAAOC,OAAS,EACfD,EAAOE,KAAI,CAACV,EAAOW,IAAUV,cAACW,EAAI,CAAaZ,MAAOA,GAAdW,KAExCV,cAACK,EAAa,CAAAF,SAAC,mBAIvB,E,OC6BA,MAAMZ,EAAUC,IAAOC,IAAGJ,MAAAC,YAAA,qEAMpBsB,EAAOpB,IAAOqB,KAAIjB,MAAAN,YAAA,0FAOlBwB,EAAQtB,IAAOuB,MAAKC,MAAA1B,YAAA,qFAIfJ,GAGI+B,I,EAAAA,EAzDf,WACE,MAAOC,EAAMC,GAAWC,IAAMC,SAAS,KAChCd,EAAQe,GAAaF,IAAMC,SAAS,IAgB3C,OACEE,eAAChC,EAAO,CAAAY,SAAA,CACNoB,eAACX,EAAI,CAACY,SAhBWC,UACnBC,EAAMC,iBACN,MAAMC,EAAYV,EAAKW,cAEnBC,EAAKF,GACPN,EAAUQ,EAAKF,KAEfN,EAAU,IACVS,QAAQC,MAAM,oCAAqCJ,IAGrDT,EAAQ,GAAG,EAKoBhB,SAAA,CAC3BH,cAAA,SAAOiC,QAAQ,aAAY9B,SAAC,kBAC5BH,cAACc,EAAK,CACJoB,UAAQ,EACRC,GAAG,aACHC,KAAK,OACLC,MAAOnB,EACPoB,SAAWZ,IACTP,EAAQO,EAAMa,OAAOF,MAAM,OAIjCrC,cAACM,EAAS,CAACC,OAAQA,MAGzB,EC7BA,MAAMhB,EAAUC,IAAOC,IAAGJ,MAAAC,YAAA,4BAIXkD,MAZf,WACE,OACExC,cAACT,EAAO,CAAAY,SACNH,cAACiB,EAAS,KAGhB,ECJA,MAAMwB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH7C,cAACoB,IAAM0B,WAAU,CAAA3C,SACfH,cAAC+C,IAAiB,CAACC,uBAAqB,EAAA7C,SACtCoB,eAACH,IAAM6B,SAAQ,CAAA9C,SAAA,CACbH,cAACb,EAAY,IACba,cAACwC,EAAG,W","file":"static/js/main.fa8567d0.chunk.js","sourcesContent":["export const COLORS = {\r\n  primary: 'hsl(240deg, 100%, 74%)',\r\n  secondary: 'hsl(333deg 100% 55%)',\r\n  background: 'hsl(210deg, 40%, 10%)',\r\n  text: 'hsl(0deg, 0%, 100%)',\r\n  black: 'hsl(0deg, 0%, 0%)',\r\n  hover: 'hsl(240deg, 100%, 70%)',\r\n  disabled: 'hsl(0deg, 0%, 30%)',\r\n};\r\n","import { createGlobalStyle } from 'styled-components';\nimport { COLORS } from '../../constants';\n\nconst GlobalStyles = createGlobalStyle`  \n  /* Intuitive Box model and removing default margin and padding */\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n\n\n  html,\n  body {\n    color: ${COLORS.text};\n    background: ${COLORS.background};\n    \n  /* Typographic tweaks: Accessible line-height and improves text-rendering */\n    line-height: 1.5;\n  \ttext-rendering: optimizeSpeed;\n\t  -webkit-font-smoothing: antialiased;\n  }\n\n  html,\n  body,\n  #root {\n    height: 100%;\n    min-width: 300px;\n    font-family: \"Gill Sans\", sans-serif;\n  }\n\n  /* Improve media defaults */\n  img,\n  picture,\n  video,\n  canvas,\n  svg {\n    display: block;\n    max-width: 100%;\n  }\n\n  /* Remove built-in form typography styles */\n  input,\n  button,\n  textarea,\n  select {\n    font: inherit;\n  }\n\n  /* Avoid text-overflows */\n  p,\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    overflow-wrap: break-word;\n  }\n\n  /* Accessible and custom Typgraphy */\n  h1 {\n    font-size: 1.6rem;\n  }\n\n  h2 {\n    font-size: 1.5rem;\n  }\n\n  h3 {\n    font-size: 1.4rem;\n  }\n\n  h4 {\n    font-size: 1.3rem;\n  }\n\n  h5 {\n    font-size: 1.2rem;\n  }\n\n  h6 {\n    font-size: 1.1rem;\n  }\n\n  ul,\n  ol {\n    list-style: none;\n  }\n\n  a,\n  a:hover,\n  a:active,\n  a:focus {\n    text-decoration: none;\n    font: inherit;\n  }\n\n  /* Create a root stacking context */\n  #root {\n    isolation: isolate;\n  }\n`;\n\nexport default GlobalStyles;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { COLORS } from '../../constants';\n\nfunction ColorCard({ color }) {\n  return (\n    <Wrapper style={{ backgroundColor: color }}>\n      <HexValue>{color}</HexValue>\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 150px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${COLORS.text};\n  font-size: 1.2rem;\n`;\n\nconst HexValue = styled.span`\n  font-size: 1.2rem;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 4px 8px;\n  border-radius: 4px;\n`;\n\nexport default ColorCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Card from '../Card';\n\nfunction ColorGrid({ colors }) {\n  return (\n    <Grid>\n      {colors.length > 0 ? (\n        colors.map((color, index) => <Card key={index} color={color} />)\n      ) : (\n        <NoDataMessage>No data found</NoDataMessage>\n      )}\n    </Grid>\n  );\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  grid-gap: 16px;\n`;\n\nconst NoDataMessage = styled.div`\n  font-size: 1.2rem;\n  text-align: center;\n  color: #555;\n`;\n\nexport default ColorGrid;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ColorGrid from '../ColorGrid';\nimport data from '../../data/data.json';\nimport { COLORS } from '../../constants';\n\nfunction TextInput() {\n  const [text, setText] = React.useState('');\n  const [colors, setColors] = React.useState([]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const inputWord = text.toLowerCase();\n\n    if (data[inputWord]) {\n      setColors(data[inputWord]);\n    } else {\n      setColors([]);\n      console.error('No data found for the input word:', inputWord);\n    }\n\n    setText('');\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={handleSubmit}>\n        <label htmlFor='text-input'>Enter a text:</label>\n        <Input\n          required\n          id='text-input'\n          type='text'\n          value={text}\n          onChange={(event) => {\n            setText(event.target.value);\n          }}\n        />\n      </Form>\n      <ColorGrid colors={colors} />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 1.2rem;\n`;\n\nconst Input = styled.input`\n  padding: 8px;\n  border-radius: 8px;\n  min-width: 300px;\n  color: ${COLORS.black};\n`;\n\nexport default TextInput;\n","import React from 'react';\nimport TextInput from '../TextInput';\nimport styled from 'styled-components';\n\nfunction App() {\n  return (\n    <Wrapper>\n      <TextInput />\n    </Wrapper>\n  );\n}\n\nconst Wrapper = styled.div`\n  padding: 48px;\n`;\n\nexport default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { StyleSheetManager } from 'styled-components';\nimport GlobalStyles from '../src/components/App/GlobalStyles';\nimport App from '../src/components/App/App';\n\nconst rootElement = document.getElementById('root');\nconst root = createRoot(rootElement);\n\nroot.render(\n  <React.StrictMode>\n    <StyleSheetManager disableVendorPrefixes>\n      <React.Fragment>\n        <GlobalStyles />\n        <App />\n      </React.Fragment>\n    </StyleSheetManager>\n  </React.StrictMode>\n);\n"],"sourceRoot":""}